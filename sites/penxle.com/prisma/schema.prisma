generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider     = "mysql"
  url          = env("PRIVATE_DATABASE_URL")
  relationMode = "prisma"
}

model Image {
  id          BigInt   @id @default(autoincrement())
  name        String   @db.VarChar(256)
  format      String   @db.VarChar(8)
  fileSize    Int      @map("file_size")
  blobSize    Int      @map("blob_size")
  width       Int
  height      Int
  path        String   @db.VarChar(256)
  hash        String   @db.VarChar(256)
  placeholder String   @db.VarChar(1024)
  createdAt   DateTime @default(now()) @map("created_at")

  profileUsingThisAsAvatar Profile?

  @@map("images")
}

model Session {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId])
  @@map("sessions")
}

model Space {
  id        BigInt     @id @default(autoincrement())
  slug      String     @db.VarChar(32)
  name      String     @db.VarChar(32)
  state     SpaceState
  createdAt DateTime   @default(now()) @map("created_at")

  members SpaceMember[]

  @@index([slug])
  @@map("spaces")
}

model SpaceMember {
  id        BigInt          @id @default(autoincrement())
  spaceId   BigInt          @map("space_id")
  space     Space           @relation(fields: [spaceId], references: [id])
  userId    BigInt          @map("user_id")
  user      User            @relation(fields: [userId], references: [id])
  profileId BigInt          @map("profile_id")
  profile   Profile         @relation(fields: [profileId], references: [id])
  role      SpaceMemberRole
  createdAt DateTime        @default(now()) @map("created_at")

  @@unique([spaceId, userId])
  @@index([profileId])
  @@index([userId])
  @@map("space_members")
}

model Profile {
  id        BigInt   @id @default(autoincrement())
  name      String   @db.VarChar(32)
  avatarId  BigInt   @unique @map("avatar_id")
  avatar    Image    @relation(fields: [avatarId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  spaces SpaceMember[]
  user   User?

  @@map("profiles")
}

model User {
  id        BigInt    @id @default(autoincrement())
  email     String    @unique @db.VarChar(256)
  password  String?   @db.VarChar(256)
  profileId BigInt    @unique @map("profile_id")
  profile   Profile   @relation(fields: [profileId], references: [id])
  state     UserState
  createdAt DateTime  @default(now()) @map("created_at")

  sessions Session[]
  spaces   SpaceMember[]

  @@map("users")
}

enum SpaceState {
  ACTIVE
  INACTIVE
}

enum SpaceMemberRole {
  OWNER
  MEMBER
}

enum UserState {
  ACTIVE
  INACTIVE
}
