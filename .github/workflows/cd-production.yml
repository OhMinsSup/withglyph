name: CD

on:
  push:
    branches: [main]

jobs:
  production:
    name: Production
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [gh-app, literoom, penxle.io]
    concurrency: ${{ matrix.project }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prepare local actions
        run: pnpm run build:actions

      - name: Build local dependencies
        run: pnpm run build:deps

      - name: Build project
        run: pnpm exec turbo run build --filter=${{ matrix.project }}

      - name: Upload lambda function
        uses: ./actions/upload-lambda
        with:
          project: ${{ matrix.project }}
        env:
          AWS_REGION: ap-northeast-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Applying infrastructure
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: penxle/production
          work-dir: ./infra/${{ matrix.project }}
        env:
          AWS_REGION: ap-northeast-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
