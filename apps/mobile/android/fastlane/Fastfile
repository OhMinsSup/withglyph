default_platform(:android)

platform :android do
  lane :beta do
    latest_release = firebase_app_distribution_get_latest_release(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      app: "1:58678861052:android:a1ecff4792b696f9bd8b79",
    )
    target_build_number = latest_release[:buildVersion].to_i + 1

    Dir.chdir("../..") do
      sh "echo $PLAY_STORE_UPLOAD_KEYSTORE | base64 -d > android/keystore.jks"
      sh "flutter build apk --build-number=#{target_build_number} --dart-define=ENV=release"
    end

    dist = firebase_app_distribution(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      app: "1:58678861052:android:a1ecff4792b696f9bd8b79",
      groups: "android@team",
      android_artifact_path: "../build/app/outputs/apk/release/app-release.apk",
    )

    slack(
      slack_url: ENV["SLACK_WEBHOOK_URL"],
      pretext: "새 빌드가 있습니다 :rocket:",
      default_payloads: [],
      use_webhook_configured_username_and_icon: true,
      attachment_properties: {
        fields: [
          { title: "플랫폼", value: "Android", short: true },
          { title: "빌드", value: "#{dist[:displayVersion]} (#{dist[:buildVersion]})", short: true },
          { title: "릴리즈 페이지", value: dist[:testingUri] },
        ],
      },
    )
  end

  lane :release do
    current_build_number = google_play_track_version_codes(
      track: "internal",
    )[0]

    upload_to_play_store(
      version_code: current_build_number,
      track: "internal",
      track_promote_to: 'production',
      skip_upload_apk: true,
      skip_upload_aab: true,
      sync_image_upload: true,
    )
  end
end
