default_platform(:ios)

platform :ios do
  lane :certificates do
    app_store_connect_api_key(
      issuer_id: "790503b8-57bb-4621-a1e1-4cf096032add",
      key_id: "JSJ3753N49",
    )
    
    firebase_app_distribution_get_udids(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      project_number: "58678861052",
      output_file: "build/udids.txt",
    )

    register_devices(devices_file: "./build/udids.txt")

    match(type: "adhoc", force_for_new_devices: true)
    match(type: "appstore")
  end

  lane :build do
    latest_release = firebase_app_distribution_get_latest_release(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      app: "1:58678861052:ios:65d590f2311a51d6bd8b79",
    )
    target_build_number = latest_release[:buildVersion].to_i + 1

    Dir.chdir("../..") do
      sh "flutter build ipa --build-number=#{target_build_number} --dart-define=ENV=release --no-codesign"
    end

    match(type: "adhoc", readonly: true)
    build_app(
      output_directory: 'build',
      output_name: 'Runner.ipa',
      archive_path: 'build/Runner.xcarchive',
      skip_package_dependencies_resolution: true,
    )

    dist = firebase_app_distribution(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      app: "1:58678861052:ios:65d590f2311a51d6bd8b79",
      groups: "ios@team",
    )

    slack(
      slack_url: ENV["SLACK_WEBHOOK_URL"],
      channel: '#activities',
      pretext: "새 테스트 빌드가 있습니다 :rocket:",
      default_payloads: [],
      use_webhook_configured_username_and_icon: true,
      attachment_properties: {
        fields: [
          { title: "플랫폼", value: "iOS", short: true },
          { title: "빌드", value: "#{dist[:displayVersion]} (#{dist[:buildVersion]})", short: true },
          { title: "릴리즈 페이지", value: dist[:testingUri] },
        ],
      },
    )
  end

  lane :beta do
    dist = firebase_app_distribution(
      service_credentials_json_data: ENV["GOOGLE_SERVICE_ACCOUNT"],
      app: "1:58678861052:ios:65d590f2311a51d6bd8b79",
      groups: "ios@team, ios@beta",
      ipa_path: "build/Runner.ipa",
    )

    slack(
      slack_url: ENV["SLACK_WEBHOOK_URL"],
      channel: '#app-private-beta',
      pretext: "새 베타 빌드가 있습니다 :rocket:",
      default_payloads: [],
      use_webhook_configured_username_and_icon: true,
      attachment_properties: {
        fields: [
          { title: "플랫폼", value: "iOS", short: true },
          { title: "빌드", value: "#{dist[:displayVersion]} (#{dist[:buildVersion]})", short: true },
          { title: "릴리즈 페이지", value: dist[:testingUri] },
        ],
      },
    )
  end

  lane :release do
    match(type: "appstore", readonly: true)

    app_store_connect_api_key(
      issuer_id: "790503b8-57bb-4621-a1e1-4cf096032add",
      key_id: "JSJ3753N49",
    )

    latest_release = firebase_app_distribution_get_latest_release()

    Dir.chdir("../..") do
      sh "flutter build ipa --dart-define=ENV=release --build-number=#{current_build_number + 1} --export-options-plist=ios/ExportOptions/release.plist"
    end

    upload_to_app_store(
      force: true,
      skip_binary_upload: true,
      reject_if_possible: true,
      submit_for_review: true,
      automatic_release: true,
      submission_information: { add_id_info_uses_idfa: false },
      precheck_include_in_app_purchases: false,
      sync_screenshots: true,
    )
  end
end
